// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model user {
  id String @id @default(uuid())
  username String @unique
  imageUrl String @db.Text
  externalUserId String @unique
  bio String? @db.Text

  follower follow[]  @relation("Follower")
  following follow[] @relation("FollowedBy")

  blocking  block[] @relation("Blocking")
  blockedBy block[] @relation("BlockedBy")

  stream    stream?


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model stream {
  id String @id @default(uuid())
  name String @db.Text
  thumbnailUrl String? @db.Text

  ingressId String? @unique
  serverUrl String? @db.Text
  streamKey String? @db.Text

  isLive Boolean @default(false)
  isChatEnabled Boolean @default(true)
  isChatDelayed Boolean @default(false)
  isChatFollowersOnly Boolean @default(false)

  userId String @unique
  user user @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([ingressId])
  @@fulltext([name])
}

model follow {
  id String @id @default(uuid())
  followerId  String
  followingId String

  follower user @relation(name: "Follower", fields: [followerId], references: [id], onDelete: Cascade)
  following user @relation(name: "FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model block {
  id String @id @default(uuid())
  blockerId String
  blockedId String

  blocker user @relation(name: "Blocking", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked user @relation(name: "BlockedBy", fields: [blockedId], references: [id], onDelete: Cascade)

  @@unique([blockerId, blockedId])
  @@index([blockerId])
  @@index([blockedId])
}